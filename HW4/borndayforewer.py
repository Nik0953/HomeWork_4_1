"""
Предлагается модернизировать программу из прошлого дз используя хотя бы 1-у функцию,
подробности в файле

МОДУЛЬ 2
Программа из 2-го дз
Сначала пользователь вводит год рождения Пушкина, когда отвечает верно вводит день рождения
Можно использовать свой вариант программы из предыдущего дз, мой вариант реализован ниже
Задание: переписать код используя как минимум 1 функцию
"""


def birthday_test(birthday_str, poet_name='А. С. Пушкина'):
    """
    функция принимает правильный день рождения и ФИО человека
    :param birthday_str: строка в формате 'dd.mm.yyyy'
    :param poet_name - имя человека в родительном падеже, текстовая строка
    :return: являются ли ВСЕ ответы правильными, Boolean
    """

    # Разбираем birthday_str на год, месяц, день и меняем их порядок
    birthday_lst = list(reversed(birthday_str.split('.')))

    # названия категорий времени
    dmy = ['год', 'месяц', 'день']
    all_write_answers = True
    print('Викторина \'Знаешь ли ты дни рождения великих людей\'?')
    for n, time_name in zip(birthday_lst, dmy):
        invitation_text = 'Введите ' + time_name + ' рождения ' + poet_name + ': '
        answer = input(invitation_text).strip()
        if len(answer) == 1:
            answer = '0' + answer   # на случай ввода дня или месяца без '0' в первом разряде
        if answer == n:
            print('Верно!')
        else:
            all_write_answers = False
            print('Неверно!   Правильный ответ:', n)
    return all_write_answers


birthday_test('26.05.1799')
birthday_test('20.06.1932', 'Р. Рождественского')


"""
Результат работы программы:
_______________
Викторина 'Знаешь ли ты дни рождения великих людей'?
Введите год рождения А. С. Пушкина: 26
Неверно!   Правильный ответ: 1799
Введите месяц рождения А. С. Пушкина: 5
Верно!
Введите день рождения А. С. Пушкина: 26
Верно!
Викторина 'Знаешь ли ты дни рождения великих людей'?
Введите год рождения Р. Рождественского: 1920
Неверно!   Правильный ответ: 1932
Введите месяц рождения Р. Рождественского: 06
Верно!
Введите день рождения Р. Рождественского: 20
Верно!
"""



"""
Еще одна функция из прошлого домашнего задания

Функция input_int_lst()
    осуществляет ввод пользователем списка целых чисел через разделители
    принимает параметр - строку с допустимыми разделителями separators_acceptable
    возвращает список целых чисел
    При вводе пробелы и иные не цифровые символы и не-разделители не являются ошибкой
        и игнорируются.
    Пустые элементы списка заменяются нулями
    Допустимо одновременное использование разных разделителей

"""


def input_int_lst(separators_acceptable=',;/'):
    chars_acceptable = '1234567890'

    invitation_text = 'Введите цифры с одним из разделителей (\'' \
                      + "\' или \'".join(separators_acceptable) + '\' ) : '
    txt = input(invitation_text)

    # все допустимые символы    == '1234567890,;/'
    ch_and_sep_accept = chars_acceptable + separators_acceptable

    # оставляем в тексте только цифры и разделители
    txt = list(filter(lambda ch: True if (ch in ch_and_sep_accept) else False, list(txt)))
    # txt из строки временно становится списком

    # заменяем все последующие разделители на первый в списке разделителей
    sep0 = separators_acceptable[0]
    txt = list(map(lambda ch: sep0 if (ch in separators_acceptable) else ch, txt))

    # собираем список в текст
    txt = ''.join(txt)
    # создаем список строк цифр, разделенных разделителем
    txt_lst = txt.split(sep0)
    # Пустые элементы списка заменяются нулями
    txt_lst = list(map(lambda x: '0' if len(x) == 0 else x, txt_lst))
    # преобразуем текстовые элементы списка в целочисленные
    txt_int = list(map(int, txt_lst))
    return txt_int


print('\n Пример c разделителями по умолчанию')
print(input_int_lst())

print('\n Пример передачи в функцию иных разделителей')
print(input_int_lst('.,!'))

"""
Результат работы программы:
_______________

 Пример c разделителями по умолчанию
Введите цифры с одним из разделителей (',' или ';' или '/' ) : 3456asd, Error404;/E2:E4
[3456, 404, 0, 24]

 Пример передачи в функцию иных разделителей
Введите цифры с одним из разделителей ('.' или ',' или '!' ) : 345.5/6 Wow!
[345, 56, 0]

"""
